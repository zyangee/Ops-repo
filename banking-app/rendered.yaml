---
# Source: app-code/templates/common/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bank-secrets
type: Opaque
data:
  DB_PASSWORD: QmFua3VzZXIhQA==
  JWT_SECRET: U2VjcmV0S2V5Q29tcGxleDExMjlAIw==
---
# Source: app-code/templates/common/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: bank-config
data:
  DATABASE_URL: jdbc:postgresql://bank-db:5432/bank
  REDIS_HOST: redis-master
---
# Source: app-code/templates/db/initdb.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: bank-db-init
data:
  create-tables.sql: |
    --회원테이블
    CREATE TABLE users (
      user_num INT AUTO_INCREMENT PRIMARY KEY,
      userid VARCHAR(20) NOT NULL UNIQUE,
      username VARCHAR(50) NOT NULL,
      password VARCHAR(255) NOT NULL,
      email VARCHAR(100) NOT NULL UNIQUE,
      phone_number VARCHAR(20) NOT NULL UNIQUE,
      date_of_birth CHAR(14) NOT NULL,
      account_created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      last_login TIMESTAMP NULL
    );

    --거래유형 참조 테이블
    CREATE TABLE transaction_types (
      id INT AUTO_INCREMENT PRIMARY KEY,
      type VARCHAR(50) NOT NULL UNIQUE
    );

    --계좌 테이블
    CREATE TABLE accounts (
      account_id INT AUTO_INCREMENT PRIMARY KEY,
      user_num INT NOT NULL,
      account_number VARCHAR(20) NOT NULL UNIQUE,
      balance BIGINT NOT NULL DEFAULT 0,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      account_password VARCHAR(255) NOT NULL,
      FOREIGN KEY (user_num) REFERENCES users(user_num)
    );

    --거래내역 테이블
    CREATE TABLE transactions ( 
      transaction_id INT AUTO_INCREMENT PRIMARY KEY,
      account_id INT NOT NULL,
      transaction_type_id INT NOT NULL,
      amount BIGINT NOT NULL,
      amount_after BIGINT NOT NULL,
      receiver_account VARCHAR(20),
      transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (account_id) REFERENCES accounts(account_id),
      FOREIGN KEY (transaction_type_id) REFERENCES transaction_types(id)
    );

    --대출 유형 참조 테이블
    CREATE TABLE loan_types (
      id INT AUTO_INCREMENT PRIMARY KEY,
      type VARCHAR(50) NOT NULL UNIQUE
    );
    
    --대출 상태 참조 테이블
    CREATE TABLE loan_statuses (
      id INT AUTO_INCREMENT PRIMARY KEY,
      status VARCHAR(50) NOT NULL UNIQUE
    );

    --대출 테이블
    CREATE TABLE loans (
      loan_id INT AUTO_INCREMENT PRIMARY KEY,
      user_num INT NOT NULL,
      loan_type_id INT NOT NULL,
      loan_amount BIGINT NOT NULL,
      interest_rate DECIMAL(5, 2) NOT NULL,
      loan_start_date DATE NOT NULL,
      loan_end_date DATE NOT NULL,
      loan_status_id INT NOT NULL,
      FOREIGN KEY (user_num) REFERENCES users(user_num),
      FOREIGN KEY (loan_type_id) REFERENCES loan_types(id),
      FOREIGN KEY (loan_status_id) REFERENCES loan_statuses(id)
    );

    --송금 상태 참조 테이블
    CREATE TABLE transfer_statuses (
      id INT AUTO_INCREMENT PRIMARY KEY,
      status VARCHAR(50) NOT NULL UNIQUE  
    );
  
    --송금 테이블
    CREATE TABLE transfers (
      transfer_id INT AUTO_INCREMENT PRIMARY KEY,
      sender_account_id INT NOT NULL,
      receiver_account VARCHAR(20) NOT NULL,
      amount BIGINT NOT NULL,
      transfer_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      status_id INT NOT NULL,
      FOREIGN KEY (sender_account_id) REFERENCES accounts(account_id),
      FOREIGN KEY (status_id) REFERENCES transfer_statuses(id)
    );

    --로그인 기록 테이블
    CREATE TABLE login_history (
      login_id INT AUTO_INCREMENT PRIMARY KEY,
      user_num INT NOT NULL,
      login_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      ip_address VARCHAR(45),
      device_info VARCHAR(255),
      FOREIGN KEY (user_num) REFERENCES users(user_num)
    );

  initial-data.sql: |
    insert into loan_statuses(status) values('진행중'), ('상환완료'), ('연체'), ('신청대기');
    insert into loan_types(type) values('신용대출'),('담보대출'),('자동차대출'), ('사업대출');
    insert into transaction_types(type) values('입금'), ('출금');
    insert into transfer_statuses(status) values('이체 대기'), ('Completed'), ('Failed');
---
# Source: app-code/templates/db/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bank-db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
# Source: app-code/templates/account/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: app-code-account
spec:
  type: ClusterIP
  ports:
  - port: 8082
    targetPort: 8082
  selector:
    app: app-code-account
---
# Source: app-code/templates/db/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: bank-db
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: bank-db
---
# Source: app-code/templates/loans/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: app-code-loans
spec:
  type: ClusterIP
  ports:
  - port: 8081
    targetPort: 8081
  selector:
    app: app-code-loans
---
# Source: app-code/templates/login/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: app-code-login
spec:
  type: ClusterIP
  ports:
  - port: 8083
    targetPort: 8083
  selector:
    app: app-code-login
---
# Source: app-code/templates/account/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-code-account
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-code-account
  template:
    metadata:
      labels:
        app: app-code-account
    spec: 
      containers:
      - name: app-code-account
        image: "zyange/app-code-account:latest"
        ports:
        - containerPort: 8082
        envFrom:
        - configMapRef:
            name: bank-config
        - secretRef:
            name: bank-secrets
---
# Source: app-code/templates/db/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bank-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bank-db
  template:
    metadata:
      labels:
        app: bank-db
    spec:
      containers:
      - name: bank-db
        image: "postgres:15.3-bullseye"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_HOST
          value: bank-db
        - name: POSTGRES_DB
          value: bank
        - name: POSTGRES_USER
          value: bankuser
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bank-secrets
              key: DB_PASSWORD
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: bank-db-pvc
      - name: init-scripts
        configMap:
          name: bank-db-init
---
# Source: app-code/templates/loans/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-code-loans
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-code-loans
  template:
    metadata:
      labels:
        app: app-code-loans
    spec:
      containers:
      - name: app-code-loans
        image: "zyange/app-code-loans:latest"
        ports:
        - containerPort: 8081
        envForm:
        - configMapRef:
            name: bank-config
        - secretRef:
            name: bank-secrets
---
# Source: app-code/templates/login/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-code-login
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-code-login
  template:
    metadata:
      labels:
        app: app-code-login
    spec: 
      containers:
      - name: app-code-login
        image: "zyange/app-code-login:latest"
        ports:
        - containerPort: 8083
        envFrom:
        - configMapRef:
            name: bank-config
        - secretRef:
            name: bank-secrets
---
# Source: app-code/templates/account/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-code-account
spec:
  rules:
  - host: banking-app.zyangee.store
    http:
      paths:
      - path: /account
        pathType: Prefix
        backend:
          service:
            name: app-code-account
            port:
              number: 8082
---
# Source: app-code/templates/loans/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-code-loans
spec:
  rules:
  - host: banking-app.zyangee.store
    http:
      paths:
      - path: /loans
        pathType: Prefix
        backend:
          service:
            name: app-code-loans
            port:
              number: 8081
---
# Source: app-code/templates/login/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-code-login
spec:
  rules:
  - host: banking-app.zyangee.store
    http:
      paths:
      - path: /login
        pathType: Prefix
        backend:
          service:
            name: app-code-login
            port:
              number: 8083
